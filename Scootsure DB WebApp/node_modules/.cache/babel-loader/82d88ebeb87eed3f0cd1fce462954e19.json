{"remainingRequest":"/home/niall/Documents/ys_20/scootsure_no_node/node_modules/babel-loader/lib/index.js!/home/niall/Documents/ys_20/scootsure_no_node/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/niall/Documents/ys_20/scootsure_no_node/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/niall/Documents/ys_20/scootsure_no_node/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/niall/Documents/ys_20/scootsure_no_node/src/pages/Dashboard.vue","mtime":1577825956000},{"path":"/home/niall/Documents/ys_20/scootsure_no_node/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/niall/Documents/ys_20/scootsure_no_node/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/niall/Documents/ys_20/scootsure_no_node/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/niall/Documents/ys_20/scootsure_no_node/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { StatsCard, ChartCard } from \"@/components/index\";\nimport Chartist from 'chartist';\nimport \"firebase/app\";\nimport db from \"@/components/firebaseinit.js\";\nimport 'firebase/firestore';\nexport default {\n  components: {\n    StatsCard,\n    ChartCard\n  },\n\n  /**\n   * Chart data used to render stats, charts. Should be replaced with server data\n   */\n  created() {\n    db.collection(\"users\").where(\"master\", \"==\", true).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        console.log(doc.id, \" => \", doc.data());\n        this.statsData = doc.data();\n        this.localtotalUsers = this.statsData.totalUsers;\n        this.localaveragePremium = this.statsData.averagePremium;\n        this.localaverageDistance = this.statsData.averageDistance;\n        this.localaverageSpeed = this.statsData.averageSpeed;\n        console.log(\"data collected\");\n      });\n    }); // db.collection(\"journeys\").where(\"master\", \"==\", false).get().then((querySnapshot) => {\n    //       querySnapshot.forEach((doc) => {\n    //           journeysToday++;\n    //           console.log(\"number of journeys\" + journeysToday)\n    //           // doc.data() is never undefined for query doc snapshots\n    //           console.log(doc.id, \" => \", doc.data());\n    //           console.log(\"done\");\n    //       });\n    //   });\n  },\n\n  data() {\n    return {\n      journeysToday: Number,\n      dateToday: Number,\n      secondSeries: [],\n      statsData: [],\n      localtotalUsers: \"\",\n      localaveragePremium: \"\",\n      localaverageDistance: \"\",\n      localaverageSpeed: \"\",\n      statsCards: [{\n        type: \"info\",\n        icon: \"ti-user\",\n        title: \"Users\",\n        //value: \"498\",\n        value: this.localtotalUsers,\n        footerText: \"Updated now\",\n        footerIcon: \"ti-reload\"\n      }, {\n        type: \"success\",\n        icon: \"ti-money\",\n        title: \"Average Premium\",\n        //value: \"â‚¬289\",\n        value: this.localaveragePremium,\n        footerText: \"Updated an hour ago\",\n        footerIcon: \"ti-timer\"\n      }, {\n        type: \"danger\",\n        icon: \"ti-target\",\n        title: \"Average Speed\",\n        //value: \"12km/h\",\n        value: this.localaverageSpeed,\n        footerText: \"Updated now\",\n        footerIcon: \"ti-reload\"\n      }, {\n        type: \"error\",\n        icon: \"ti-map-alt\",\n        title: \"Average Distance\",\n        //value: \"312\",\n        value: this.localaverageDistance,\n        footerText: \"Updated now\",\n        footerIcon: \"ti-reload\"\n      }],\n      usersChart: {\n        data: {\n          labels: [\"00:00PM\", \"03:00AM\", \"06:00AM\", \"09:00AM\", \"12:00AM\", \"3:00PM\", \"6:00PM\", \"9:00PM\", \"00:00PM\"],\n          series: [[15, 8, 25, 80, 35, 48, 112, 45, 17], [12, 7, 18, 45, 25, 42, 65, 32, 12], [23, 11, 8, 14, 15, 20, 38, 52, 25]]\n        },\n        options: {\n          low: 0,\n          high: 115,\n          showArea: true,\n          height: \"245px\",\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: Chartist.Interpolation.simple({\n            divisor: 2.5\n          }),\n          showLine: true,\n          showPoint: false\n        }\n      },\n      activityChart: {\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          series: [[542, 543, 520, 680, 653, 753, 326, 434, 568, 610, 756, 895], [230, 293, 380, 480, 503, 553, 600, 664, 698, 710, 736, 795]]\n        },\n        options: {\n          seriesBarDistance: 10,\n          axisX: {\n            showGrid: false\n          },\n          height: \"245px\"\n        }\n      },\n      preferencesChart: {\n        data: {\n          labels: [\"62%\", \"32%\", \"6%\"],\n          series: [62, 32, 6]\n        },\n        options: {}\n      }\n    };\n  } // firestore () {\n  //   return {\n  //     secondSeries: db.collection(\"users\").orderBy('createdAt')\n  //   }\n  //   console.log(\"RIGHT HERE\",secondSeries)\n  // },\n  // created(){\n  //   db.collection(\"users\").get().then\n  //   (\n  //     querySnapshot => {\n  //       querySnapshot.forEach\n  //       (doc => {\n  //         console.log(\"hello\", doc.id);\n  //         const data = {\n  //           \"id\" : doc.id,\n  //           \"example\" : doc.data().example,\n  //           \"random\" : doc.data().random,\n  //           \"averageDistance\" : doc.data().averageDistance,\n  //           \"averagePremium\" : doc.data().averagePremium,\n  //           \"averageSpeed\" : doc.data().averageSpeed,\n  //           \"totalUsers\" : doc.data().totalUsers\n  //         }\n  //         this.secondSeries.push(data);\n  //         console.log(secondSeries.totalUsers)\n  //       })\n  //     })\n  // }\n  //   created(){\n  //   db.collection(\"users\").get().then\n  //   (\n  //     querySnapshot => {\n  //       querySnapshot.forEach\n  //       (doc => {\n  //         console.log(\"hello\", doc.id);\n  //         const data = {\n  //           \"id\" : doc.id,\n  //           \"example\" : doc.data().example,\n  //           \"random\" : doc.data().random,\n  //           \"averageDistance\" : doc.data().averageDistance,\n  //           \"averagePremium\" : doc.data().averagePremium,\n  //           \"averageSpeed\" : doc.data().averageSpeed,\n  //           \"totalUsers\" : doc.data().totalUsers\n  //         }\n  //         this.secondSeries.push(data);\n  //       })\n  //     })\n  // }\n\n\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA,SAAA,SAAA,EAAA,SAAA,QAAA,oBAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,OAAA,cAAA;AACA,OAAA,EAAA,MAAA,8BAAA;AAEA,OAAA,oBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SADA;AAEA,IAAA;AAFA,GADA;;AAMA;;;AAIA,EAAA,OAAA,GAAA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,GAAA,IAAA,CAAA,aAAA,IAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,EAAA,MAAA,EAAA,GAAA,CAAA,IAAA,EAAA;AACA,aAAA,SAAA,GAAA,GAAA,CAAA,IAAA,EAAA;AACA,aAAA,eAAA,GAAA,KAAA,SAAA,CAAA,UAAA;AACA,aAAA,mBAAA,GAAA,KAAA,SAAA,CAAA,cAAA;AACA,aAAA,oBAAA,GAAA,KAAA,SAAA,CAAA,eAAA;AACA,aAAA,iBAAA,GAAA,KAAA,SAAA,CAAA,YAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,OARA;AASA,KAVA,EADA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAlCA;;AAoCA,EAAA,IAAA,GAAA;AAGA,WAAA;AAGA,MAAA,aAAA,EAAA,MAHA;AAIA,MAAA,SAAA,EAAA,MAJA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,SAAA,EAAA,EAPA;AASA,MAAA,eAAA,EAAA,EATA;AAUA,MAAA,mBAAA,EAAA,EAVA;AAWA,MAAA,oBAAA,EAAA,EAXA;AAYA,MAAA,iBAAA,EAAA,EAZA;AAeA,MAAA,UAAA,EAAA,CAEA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,KAAA,EAAA,OAHA;AAIA;AACA,QAAA,KAAA,EAAA,KAAA,eALA;AAMA,QAAA,UAAA,EAAA,aANA;AAOA,QAAA,UAAA,EAAA;AAPA,OAFA,EAWA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,iBAHA;AAIA;AACA,QAAA,KAAA,EAAA,KAAA,mBALA;AAMA,QAAA,UAAA,EAAA,qBANA;AAOA,QAAA,UAAA,EAAA;AAPA,OAXA,EAoBA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,WAFA;AAGA,QAAA,KAAA,EAAA,eAHA;AAIA;AACA,QAAA,KAAA,EAAA,KAAA,iBALA;AAMA,QAAA,UAAA,EAAA,aANA;AAOA,QAAA,UAAA,EAAA;AAPA,OApBA,EA6BA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,IAAA,EAAA,YAFA;AAGA,QAAA,KAAA,EAAA,kBAHA;AAIA;AACA,QAAA,KAAA,EAAA,KAAA,oBALA;AAMA,QAAA,UAAA,EAAA,aANA;AAOA,QAAA,UAAA,EAAA;AAPA,OA7BA,CAfA;AAsDA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,QANA,EAOA,QAPA,EAQA,QARA,EASA,SATA,CADA;AAYA,UAAA,MAAA,EAAA,CACA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CADA,EAEA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAFA,EAGA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAHA;AAZA,SADA;AAmBA,QAAA,OAAA,EAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,GAFA;AAGA,UAAA,QAAA,EAAA,IAHA;AAIA,UAAA,MAAA,EAAA,OAJA;AAKA,UAAA,KAAA,EAAA;AACA,YAAA,QAAA,EAAA;AADA,WALA;AAQA,UAAA,UAAA,EAAA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA;AACA,YAAA,OAAA,EAAA;AADA,WAAA,CARA;AAWA,UAAA,QAAA,EAAA,IAXA;AAYA,UAAA,SAAA,EAAA;AAZA;AAnBA,OAtDA;AAwFA,MAAA,aAAA,EAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,CADA;AAeA,UAAA,MAAA,EAAA,CACA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CADA,EAEA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAFA;AAfA,SADA;AAqBA,QAAA,OAAA,EAAA;AACA,UAAA,iBAAA,EAAA,EADA;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,QAAA,EAAA;AADA,WAFA;AAKA,UAAA,MAAA,EAAA;AALA;AArBA,OAxFA;AAqHA,MAAA,gBAAA,EAAA;AACA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,KAAA,EAAA,IAAA,CADA;AAEA,UAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAFA,SADA;AAKA,QAAA,OAAA,EAAA;AALA;AArHA,KAAA;AA8HA,GArKA,CAuKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvNA,CAAA","sourcesContent":["<template>\n  <div>\n\n    <!--Stats cards-->\n    <!-- <div class=\"row\">\n      <div class=\"col-md-6 col-xl-3\" v-for=\"stats in statsCards\" :key=\"stats.title\">\n        <stats-card>\n          <div class=\"icon-big text-center\" :class=\"`icon-${stats.type}`\" slot=\"header\">\n            <i :class=\"stats.icon\"></i>\n          </div>\n          <div class=\"numbers\" slot=\"content\">\n            <p>{{stats.title}}</p>\n            {{stats.value}} \n         </div>\n          <div class=\"stats\" slot=\"footer\">\n            <i :class=\"stats.footerIcon\"></i> {{stats.footerText}}\n          </div>\n        </stats-card>\n      </div>\n    </div> -->\n\n\n  <div class=\"row\">\n    <div class=\"col-md-6 col-xl-3\">\n\n      <stats-card>\n        <div class=\"icon-big text-center\" slot=\"header\">\n          <i class=\"ti-user text-info\"></i>\n        </div>\n        <div class=\"numbers\" slot=\"content\">\n          <p>Users</p>\n          {{localtotalUsers}}\n        </div>\n      </stats-card>\n\n    </div>\n\n    <div class=\"col-md-6 col-xl-3\">\n\n      <stats-card>\n        <div class=\"icon-big text-center\" slot=\"header\">\n          <i class=\"ti-target text-danger\"></i>\n        </div>\n        <div class=\"numbers\" slot=\"content\">\n          <p>Average Speed</p>\n          {{localaverageSpeed}} km/h\n        </div>\n      </stats-card>\n\n    </div>\n\n    <div class=\"col-md-6 col-xl-3\">\n\n      <stats-card>\n        <div class=\"icon-big text-center\" slot=\"header\">\n          <i class=\"ti-money text-success\"></i>\n        </div>\n        <div class=\"numbers\" slot=\"content\">\n          <p>Average Premium</p>\n          â‚¬{{localaveragePremium}}\n        </div>\n      </stats-card>\n\n    </div>\n\n    <div class=\"col-md-6 col-xl-3\">\n\n      <stats-card>\n        <div class=\"icon-big text-center\" slot=\"header\">\n          <i class=\"ti-map-alt text-error\"></i>\n        </div>\n        <div class=\"numbers\" slot=\"content\">\n          <p>Average Distance</p>\n          {{localaverageDistance}} km\n        </div>\n      </stats-card>\n\n    </div>\n  </div>\n\n\n    \n\n\n    <!--Charts-->\n    <div class=\"row\">\n\n      <div class=\"col-12\">\n        <chart-card title=\"Journeys\"\n                    sub-title=\"24 Hours performance\"\n                    :chart-data=\"usersChart.data\"\n                    :chart-options=\"usersChart.options\">\n          <!-- <span slot=\"footer\">\n            <i class=\"ti-reload\"></i> Updated 3 minutes ago\n          </span> -->\n          <div slot=\"legend\">\n            <i class=\"fa fa-circle text-info\"></i> low Risk Customer\n            <i class=\"fa fa-circle text-warning\"></i> Medium Risk Customer\n            <i class=\"fa fa-circle text-danger\"></i> High Risk Customer\n          </div>\n        </chart-card>\n      </div>\n\n      <!-- <div class=\"col-md-6 col-12\">\n        <chart-card title=\"Email Statistics\"\n                    sub-title=\"Last campaign performance\"\n                    :chart-data=\"preferencesChart.data\"\n                    chart-type=\"Pie\">\n          <span slot=\"footer\">\n            <i class=\"ti-timer\"></i> Campaign set 2 days ago</span>\n          <div slot=\"legend\">\n            <i class=\"fa fa-circle text-info\"></i> Open\n            <i class=\"fa fa-circle text-danger\"></i> Bounce\n            <i class=\"fa fa-circle text-warning\"></i> Unsubscribe\n          </div>\n        </chart-card>\n      </div>\n\n      <div class=\"col-md-6 col-12\">\n        <chart-card title=\"2015 Sales\"\n                    sub-title=\"All products including Taxes\"\n                    :chart-data=\"activityChart.data\"\n                    :chart-options=\"activityChart.options\">\n          <span slot=\"footer\">\n            <i class=\"ti-check\"></i> Data information certified\n          </span>\n          <div slot=\"legend\">\n            <i class=\"fa fa-circle text-info\"></i> Tesla Model S\n            <i class=\"fa fa-circle text-warning\"></i> BMW 5 Series\n          </div>\n        </chart-card>\n      </div> -->\n\n    </div>\n\n  </div>\n</template>\n<script>\nimport { StatsCard, ChartCard } from \"@/components/index\";\nimport Chartist from 'chartist';\nimport \"firebase/app\";\nimport db from \"@/components/firebaseinit.js\";\n\nimport 'firebase/firestore';\n\nexport default {\n  components: {\n    StatsCard,\n    ChartCard\n  },\n\n  /**\n   * Chart data used to render stats, charts. Should be replaced with server data\n   */\n\n   created(){\n    db.collection(\"users\").where(\"master\", \"==\", true).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n            console.log(doc.id, \" => \", doc.data());\n            this.statsData = doc.data();\n            this.localtotalUsers = this.statsData.totalUsers;\n            this.localaveragePremium = this.statsData.averagePremium;\n            this.localaverageDistance = this.statsData.averageDistance;         \n            this.localaverageSpeed = this.statsData.averageSpeed;     \n            console.log(\"data collected\");\n        });\n    });\n\n\n  // db.collection(\"journeys\").where(\"master\", \"==\", false).get().then((querySnapshot) => {\n  //       querySnapshot.forEach((doc) => {\n  //           journeysToday++;\n  //           console.log(\"number of journeys\" + journeysToday)\n  //           // doc.data() is never undefined for query doc snapshots\n  //           console.log(doc.id, \" => \", doc.data());\n  //           console.log(\"done\");\n  //       });\n  //   });\n  \n   },\n\n  data() {\n\n\n    return {\n\n\n      journeysToday: Number,\n      dateToday: Number,\n\n      secondSeries: [],\n      statsData: [],\n\n      localtotalUsers: \"\",\n      localaveragePremium: \"\",\n      localaverageDistance: \"\",\n      localaverageSpeed: \"\",\n      \n\n      statsCards: [\n        \n        {\n          type: \"info\",\n          icon: \"ti-user\",\n          title: \"Users\",\n          //value: \"498\",\n          value: this.localtotalUsers,\n          footerText: \"Updated now\",\n          footerIcon: \"ti-reload\"\n        },\n        {\n          type: \"success\",\n          icon: \"ti-money\",\n          title: \"Average Premium\",\n          //value: \"â‚¬289\",\n          value: this.localaveragePremium,\n          footerText: \"Updated an hour ago\",\n          footerIcon: \"ti-timer\"\n        },\n        {\n          type: \"danger\",\n          icon: \"ti-target\",\n          title: \"Average Speed\",\n          //value: \"12km/h\",\n          value: this.localaverageSpeed,\n          footerText: \"Updated now\",\n          footerIcon: \"ti-reload\"\n        },\n        {\n          type: \"error\",\n          icon: \"ti-map-alt\",\n          title: \"Average Distance\",\n          //value: \"312\",\n          value: this.localaverageDistance,\n          footerText: \"Updated now\",\n          footerIcon: \"ti-reload\"\n        }\n      ],\n      usersChart: {\n        data: {\n          labels: [\n            \"00:00PM\",\n            \"03:00AM\",\n            \"06:00AM\",\n            \"09:00AM\",\n            \"12:00AM\",\n            \"3:00PM\",\n            \"6:00PM\",\n            \"9:00PM\",\n            \"00:00PM\"\n          ],\n          series: [\n            [15, 8, 25, 80, 35, 48, 112 , 45, 17],\n            [12, 7, 18, 45, 25, 42, 65 , 32, 12],\n            [23, 11, 8, 14, 15, 20, 38 , 52, 25]\n          ]\n        },\n        options: {\n          low: 0,\n          high: 115,\n          showArea: true,\n          height: \"245px\",\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: Chartist.Interpolation.simple({\n            divisor: 2.5\n          }),\n          showLine: true,\n          showPoint: false\n        }\n      },\n      activityChart: {\n        data: {\n          labels: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"Mai\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n          ],\n          series: [\n            [542, 543, 520, 680, 653, 753, 326, 434, 568, 610, 756, 895],\n            [230, 293, 380, 480, 503, 553, 600, 664, 698, 710, 736, 795]\n          ]\n        },\n        options: {\n          seriesBarDistance: 10,\n          axisX: {\n            showGrid: false\n          },\n          height: \"245px\"\n        }\n      },\n      preferencesChart: {\n        data: {\n          labels: [\"62%\", \"32%\", \"6%\"],\n          series: [62, 32, 6]\n        },\n        options: {}\n      },\n\n    };\n  }\n\n  // firestore () {\n  //   return {\n  //     secondSeries: db.collection(\"users\").orderBy('createdAt')\n  //   }\n  //   console.log(\"RIGHT HERE\",secondSeries)\n  // },\n\n  // created(){\n  //   db.collection(\"users\").get().then\n  //   (\n  //     querySnapshot => {\n  //       querySnapshot.forEach\n  //       (doc => {\n  //         console.log(\"hello\", doc.id);\n  //         const data = {\n  //           \"id\" : doc.id,\n  //           \"example\" : doc.data().example,\n  //           \"random\" : doc.data().random,\n  //           \"averageDistance\" : doc.data().averageDistance,\n  //           \"averagePremium\" : doc.data().averagePremium,\n  //           \"averageSpeed\" : doc.data().averageSpeed,\n  //           \"totalUsers\" : doc.data().totalUsers\n  //         }\n  //         this.secondSeries.push(data);\n  //         console.log(secondSeries.totalUsers)\n  //       })\n  //     })\n  // }\n\n  //   created(){\n  //   db.collection(\"users\").get().then\n  //   (\n  //     querySnapshot => {\n  //       querySnapshot.forEach\n  //       (doc => {\n  //         console.log(\"hello\", doc.id);\n  //         const data = {\n  //           \"id\" : doc.id,\n  //           \"example\" : doc.data().example,\n  //           \"random\" : doc.data().random,\n  //           \"averageDistance\" : doc.data().averageDistance,\n  //           \"averagePremium\" : doc.data().averagePremium,\n  //           \"averageSpeed\" : doc.data().averageSpeed,\n  //           \"totalUsers\" : doc.data().totalUsers\n  //         }\n  //         this.secondSeries.push(data);\n  //       })\n  //     })\n  // }\n\n\n\n};\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/pages"}]}